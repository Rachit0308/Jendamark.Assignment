@page "/"
@using Jendamark.Assignment.Components.Operations
@using Jendamark.Assignment.Components.Device
@using Jendamark.Assignment.Models
@using Jendamark.Assignment.Services.Interfaces
@inject IOperationService OperationService
@inject IDeviceService DeviceService

<h2 class="my-4">Assembly Line Process</h2>

<Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
    <Items>
        <Tab Name="device" Style="cursor:pointer">Device Management</Tab>
        <Tab Name="operation" Style="cursor:pointer">Operation Management</Tab>
    </Items>
    <Content>
        <TabPanel Name="device">
            <div class="col-sm-12 my-2">
                <div class="row justify-content-start my-2">
                    <div class="col-4 mx-0">
                        <Button Color="Color.Primary" Clicked="()=>OpenDeviceModal(null)">Add Device</Button>
                    </div>
                </div>
                <div class="row my-2">
                     <div class="col-12 mx-0">
                        <DeviceList Devices="DeviceService.GetDevices()" ShowEditModal="OpenDeviceModal" @ref="deviceLisComponentt" />
                    </div>
                </div>
            </div>
        </TabPanel>
        <TabPanel Name="operation">
            <div class="col-sm-12 my-2">
                <div class="row justify-content-start my-2">
                    <div class="col-sm-4 mx-0">
                        <Button Color="Color.Primary" Clicked="()=>OpenOpModal(null)">Add Operation</Button>
                    </div>
                </div>
                <div class="row my-2">
                     <div class="col-12 mx-0">
                    <OperationList Operations="OperationService.GetOperations().OrderBy(o=>o.Order).ToList()" ShowEditModal="OpenOpModal" />
                    </div>
                </div>
            </div>
        </TabPanel>
    </Content>
</Tabs>

<Modal @ref="_operationModalRef">
    <OperationModal OnClose="CloseAllModal" DeviceList="DeviceService.GetDevices()" SelectedOperation="selectedOperation" />
</Modal>
<Modal @ref="_deviceModalRef">
    <DeviceModal OnClose="CloseAllModal" SelectedDevice="selectedDevice" />
</Modal>
<style>
    .show {
        display: flex !important;
    }

    .modal {
        display: none; 
        justify-content: center; 
        align-items: center; 
        position: fixed; 
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 1060; 
        overflow: hidden; 
    }
    .modal-content{
        width:500px !important;
    }
</style>
@code {
    private List<Device> ListDevices = new List<Device>();
    private List<Operation> ListOperations = new List<Operation>();
    private Modal _deviceModalRef;
    private Modal _operationModalRef;
    private Operation selectedOperation = new Operation();
    private Device selectedDevice = new Device();
    string selectedTab = "device";
    protected DeviceList deviceLisComponentt;

    private Task OnSelectedTabChanged(string name)
    {
        selectedTab = name;

        return Task.CompletedTask;
    }

    private async Task CloseAllModal()
    {
        await _operationModalRef.Hide();
        await _deviceModalRef.Hide();
        deviceLisComponentt.LoadAllDevices();
    }
    private async Task OpenOpModal(Operation operation)
    {
        if (operation != null) selectedOperation = operation;
        else selectedOperation = new Operation();
        await _operationModalRef.Show();

    }
    private async Task OpenDeviceModal(Device device)
    {
        if (device != null) selectedDevice = device;
        else selectedDevice = new Device();
        await _deviceModalRef.Show();
    }

}